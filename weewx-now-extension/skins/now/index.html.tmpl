<!doctype html>
<html lang="de">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css " rel="stylesheet">
  <link href="assets/style.css" rel="stylesheet">

  <title>$station.location - WeeWX now</title>

</head>

<body>
  <div class="container">
    <div class="row">
      <h1>$station.location</h1>
    </div>
  </div>
  <div class="container">
    <div class="row">
      <div class="col-lg-8">
        <div class="include-html" path="index_images.html"></div>
      </div>
      <div class="col-lg-4">
        <div class="include-html" path="index_current.html"></div>
      </div>
    </div>
  </div>
  <div class="container">
    <div class="row">
      <div class="col-12">
        <h2>Verlauf
          <div class="btn-group" role="group" aria-label="Basic example">
            <button type="button" class="btn btn-primary active">2 Stunden</button>
            <button type="button" class="btn btn-primary">4 Stunden</button>
            <button type="button" class="btn btn-primary">8 Stunden</button>
          </div>
        </h2>
      </div>
    </div>
    <div class="row">
      <div class="col-xxl-4 col-md-6 col-sm-12">
        <canvas id="chart_windspeed"></canvas>
      </div>      
      <div class="col-xxl-4 col-md-6 col-sm-12">
        <canvas id="chart_winddir"></canvas>
      </div>
    </div>
    <div class="row">
      <div class="col-xxl-4 col-md-6 col-sm-12">
        <canvas id="chart_temp_pressure"></canvas>
      </div>
      <div class="col-xxl-4 col-md-6 col-sm-12">
        <canvas id="chart_rainrate"></canvas>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"></script>
  <script src=" https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js "></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="assets/script.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      includeHTML();
      buildCharts();
    });
    async function buildCharts() {
      var chartData = await loadJsonObj('nowWeatherRecords.json');
      
      console.info(chartData);

      /////////////// windspeed
      new Chart(document.getElementById('chart_windspeed'), {
            type: "bar",
            options: {
                scales: {
                    x: {
                        stacked: true
                    },
                    y: {
                        stacked: true,
                        ticks: {
                            beginAtZero: true,
                            min: 0,
                            suggestedMax: 30
                        }
                    }
                },
                plugins: {
                  legend: { display: false },
                  title: {
                    display: true,
                    text: 'Windstärke / Böenstärke',
                    align: 'center'
                  }
                }                
            },
            data: {
                labels: chartData.shortTerm.windSpeed.last8hours.map(kv => new Date(kv[0]*1000).toLocaleTimeString([], {timeStyle: 'short'})),
                datasets: [
                    { backgroundColor: "rgba(29,95,170,1)", label: "Windstärke (km/h)", data: chartData.shortTerm.windSpeed.last8hours.map(kv => kv[1]) },
                    { backgroundColor: "rgba(197,47,73,0.8)", label: "Böenstärke (km/h)", data: chartData.shortTerm.windGust.last8hours.map(kv => kv[1]) }
                ]
            },
      });
      

      ///////////////////// winddirection
      var directionLabel = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];
      var directionSums = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
      chartData.shortTerm.windDir.last8hours.map(kv => kv[1]).forEach((val) => {
        directionSums[Math.floor(val / (360 / 16))]++;
      });

      new Chart(document.getElementById('chart_winddir'), {
        type: 'radar',
        options: {      
            plugins: {
              legend: { display: false },
              title: {
                  display: true,
                  text: 'Windrichtung',
                  align: 'center'
              },                       
            },
            scales: {
              r: {
                pointLabels: {
                  display: false
                },
                ticks: {
                  display: false
                },
              }
            },
            elements: {
              line: {
                borderWidth: 3
              }
            }            
        },
        data: {
            labels: directionLabel,
            datasets: [{
                borderColor: 'rgba(197,47,73,0.8)',
                backgroundColor: 'rgba(197,47,73,0.8)',
                data: directionSums,
                label: "Windrichtung",
                fill: true
            }]
        }
      });
      
      ///////////////////// temp press
      new Chart(document.getElementById('chart_temp_pressure'), {
            type: "line",
            options: {
                scales: {
                    yTemperature: {
                      position: 'left',
                      type: 'linear',
                      display: true,
                      suggestedMin: -20,
                      suggestedMax: 40
                    },
                    yPressure: {
                      position: 'right',
                      type: 'linear',
                      display: true,
                      suggestedMin: 920,
                      suggestedMax: 980
                    }
                },
                plugins: {
                  legend: { display: false },
                  title: {
                    display: true,
                    text: 'Temperatur / Luftdruck',
                    align: 'center'
                  }
                }                
            },
            data: {
                labels: chartData.shortTerm.outTemp.last2hours.map(kv => new Date(kv[0]*1000).toLocaleTimeString([], {timeStyle: 'short'})),
                datasets: [
                    { yAxisID: 'yTemperature', borderColor: 'rgba(197,47,73,0.8)', backgroundColor: 'rgba(197,47,73,0.8)', label: 'Temperatur (°C)', data: chartData.shortTerm.outTemp.last8hours.map(kv => kv[1]) },
                    { yAxisID: 'yPressure', borderColor: 'rgba(29,95,170,1)', backgroundColor: 'rgba(29,95,170,1)', label: 'Luftdruck (hPa)', data: chartData.shortTerm.barometer.last8hours.map(kv => kv[1]) }
                ]
            },
      });   

      ///////////////////// rain
      new Chart(document.getElementById('chart_rainrate'), {
        type: 'line',
        options: {
          scales: {
            y: {
                      suggestedMin: 0,
                      suggestedMax: 30,
                      type: 'linear',
                      display: true,
                      position: 'left'
                  }
              },
                plugins: {
                  legend: { display: false },
                  title: {
                    display: true,
                    text: 'Niederschlag',
                    align: 'center'
                  }
                }   
        },
        data: {
          labels: chartData.shortTerm.rainRate.last8hours.map(kv => new Date(kv[0]*1000).toLocaleTimeString([], {timeStyle: 'short'})),
          datasets: [
              { fill: true, borderColor: 'rgba(29,95,170,1)', backgroundColor: 'rgba(29,95,170,1)', label: 'Niederschlag (mm/h)', data: chartData.shortTerm.rainRate.last8hours.map(kv => kv[1]) }
          ]
      }            
      });       
    }

    async function afterIncludeHTML() {
      // init slider(s)
      new Splide('.splide').mount();
    }
  </script>

</body>

</html>